@model Infobase.Models.ChartPageModel
@{
    Layout = "_Layout.cshtml";
    string language = ViewContext.RouteData.Values["language"].ToString();
}
@Html.React("Components.InitializeChartDataStore", new {
            state = Model
        }, clientOnly: true)

<div class="row brdr-bttm" style="padding-bottom:50px;">        
        @Html.React("Components.Filters", new
		{
            filters = Model.filters,
            prompt = "Sélectionner les paramètres d'intérêt"
        }, clientOnly: true)
	
    <div class="col-md-9 mrgn-tp-md brdr-lft text-center ">
        @Html.React("Components.Charting", new { chartData = Model.ChartData }, clientOnly: true)
        <script src="https://cdn.jsdelivr.net/gh/exupero/saveSvgAsPng@gh-pages/src/saveSvgAsPng.js"></script>
        <style type="text/css">
			.form-group-sm {
			margin: 20px 0px;
			}
            .bar rect:hover {
                fill: #dfbcbd;
            }
            .footnote tspan {
                fill: rgb(220, 20, 60);
            }
            .axis-label {
                text-anchor: middle;
                font-weight: bold;
            }
            #title {
                text-align: center;
            }
        </style>
        <button id="btnSaveChart" class="btn btn-success btn-sm">
            @(Model.LanguageCode == "fr-ca" ? "Enregistrer" : "Save Chart")
            </button>
    </div>
</div>

@{
        var cellsEmptyText = new Translatable() {
                                                {("en-ca", null), ""},
                                                {("fr-ca", null), ""}
                                                };

        var cvWarnText = new Translatable() {
                                                {("en-ca", null), "Cells highlighted in yellow should be interpreted with caution as they contain estimates with a coefficient of variation between {warn}% to {suppress}%."},
                                                {("fr-ca", null), "Les données dont le coefficient de variation (CV) se situe entre {warn}% et {suppress}% sont identifiées comme suit : Les cellules jaune et indiqué (E) à utiliser avec prudence."},
                                                {("en-ca", "alt"), "Cells highlighted in yellow should be interpreted with caution."},
                                                {("fr-ca", "alt"), "Les cellules jaune et indiqué (E) à utiliser avec prudence."}
                                                
                                                };
        var cvSuppressText = new Translatable() {
                                                {("en-ca", null), "Cells highlighted in red indicate where estimates are unstable or unreleasable due to small numbers and/or coefficients of variation greater than {suppress}%."},
                                                {("fr-ca", null), "Les données présentant un coefficient de variation (CV) supérieur à {suppress}% ont été supprimées en raison de l'extrême variabilité d'échantillonnage et sont identifiées comme suit : les cellules rouge et indiqué (F) trop peu fiables pour être publiées."},
                                                {("en-ca", "alt"), "Cells highlighted in red indicate where estimates are unstable or unreleasable."},
                                                {("fr-ca", "alt"), "Les cellules rouge et indiqué (F) trop peu fiables pour être publiées."}
                                                
                                                };
    }
    <div class="row">
<div class="col-sm-12">
    @switch (language) {
        case "en-ca":
            @Html.React("Components.SummaryTable", new { 
                chartData = Model.ChartData, 
                cellsEmpty="", 
                cvWarning = "Cells highlighted in yellow should be interpreted with caution as they contain estimates with a coefficient of variation between {warn}% to {suppress}%.", 
                cvSuppressed = "Cells highlighted in red indicate where estimates are unstable or unreleasable due to small numbers and/or coefficients of variation greater than {suppress}%."
            },
            clientOnly: true);
            break;
        case "fr-ca":
            @Html.React("Components.SummaryTable", new { 
                chartData = Model.ChartData, 
                cellsEmpty="", 
                cvWarning = "Cells highlighted in yellow should be interpreted with caution as they contain estimates with a coefficient of variation between {warn}% to {suppress}%.", 
                cvSuppressed = "Cells highlighted in red indicate where estimates are unstable or unreleasable due to small numbers and/or coefficients of variation greater than {suppress}%."
            },
            clientOnly: true);
            break;
    }
</div>
</div>
<div class="row brdr-bttm">
    <div class="col-md-12">

        <h4 id="desc" class="row">
            @switch (language) {
                    case "en-ca":
                        @:<span class="col-sm-12">Measure Description</span>
                        break;
                    case "fr-ca":
                        @:<span class="col-sm-12">Descriptions des mesures</span>
                        break;
                }
        </h4>

        <div class="row">
            <div class="col-sm-12">
                @switch (language) {
                    case "en-ca":
                        @Html.React("Components.DescriptionTable", new { 
                            definitionText = "Definition",
                            dataAvailableText = "Data Available",
                            methodsText = "Estimate Calculation",
                            remarksText = "Additional Remarks"
                        }, clientOnly: true);
                        break;
                    case "fr-ca":
                        @Html.React("Components.DescriptionTable", new { 
                            definitionText = "Definition",
                            dataAvailableText = "Data Available",
                            methodsText = "Estimate Calculation",
                            remarksText = "Additional Remarks"
                        }, clientOnly: true);
                        break;
                }
                
            </div>
        </div>

    </div>
</div>
<br/>
<section class="panel panel-info">
    <header class="panel-heading">
        
            @switch (language) {
                    case "en-ca":
                        @:<h3 class="panel-title">Suggested Citation</h3>
                        break;
                    case "fr-ca":
                        @:<h3 class="panel-title">Citation suggérée</h3>
                        break;
                }
    </header>
    <div class="panel-body">
        @switch (language) {
                    case "en-ca":
                        @:<p>Center for Surveillance and Applied Research, Public Health Agency of Canada. Physical Activity, Sedentary Behaviour and Sleep (PASS) Indicators Data Tool, 2018 Edition. Public Health Infobase. Ottawa (ON): Public Health Agency of Canada, 2018.</p>
                        break;
                    case "fr-ca":
                        @:<p>Centre de surveillance et de recherche appliquée, Agence de la santé publique du Canada. Outil des données de L'indicateurs de l’activité physique, du comportement sédentaire et du sommeil (APCSS), édition 2018. Infobase de la santé publique. Ottawa (Ontario): Agence de la santé publique du Canada, 2018.</p>
                        break;
                }
    </div>
</section>
<div style="width: 0; height: 0; overflow: hidden;">
<div style="width: 1000px;" class="chartContainer">
@Html.React("Components.Charting", new { chartData = Model.ChartData }, clientOnly: true)
</div>
</div>
